import*as S from"https://esm.sh/three";import{FontLoader as Ri}from"https://esm.sh/three/examples/jsm/loaders/FontLoader.js";import{TextGeometry as Oi}from"https://esm.sh/three/examples/jsm/geometries/TextGeometry.js";import{MeshSurfaceSampler as Ni}from"https://esm.sh/three/examples/jsm/math/MeshSurfaceSampler.js";import{GPUComputationRenderer as Ii}from"https://esm.sh/three/examples/jsm/misc/GPUComputationRenderer";import{OrbitControls as Ui}from"https://esm.sh/three/examples/jsm/controls/OrbitControls";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&e(r)}).observe(document,{childList:!0,subtree:!0});function i(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function e(s){if(s.ep)return;s.ep=!0;const n=i(s);fetch(s.href,n)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const vi="154",ui=0,ci=1,Wi=2,Di=100,Li=204,qi=205,Vi=3,Ci=300,di=1e3,Ft=1001,mi=1002,Zi=1006,Hi=1008,Yi=1009,Xi=1015,Ji=1023,ji=3e3,Jt=3001,jt="",Gt="srgb",$t=7680,Gi=519,pi=35044,Pt=2e3,fi=2001;class Zt{addEventListener(t,i){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[t]===void 0&&(e[t]=[]),e[t].indexOf(i)===-1&&e[t].push(i)}hasEventListener(t,i){if(this._listeners===void 0)return!1;const e=this._listeners;return e[t]!==void 0&&e[t].indexOf(i)!==-1}removeEventListener(t,i){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(i);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const s=e.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const P=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function St(){const p=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(P[p&255]+P[p>>8&255]+P[p>>16&255]+P[p>>24&255]+"-"+P[t&255]+P[t>>8&255]+"-"+P[t>>16&15|64]+P[t>>24&255]+"-"+P[i&63|128]+P[i>>8&255]+"-"+P[i>>16&255]+P[i>>24&255]+P[e&255]+P[e>>8&255]+P[e>>16&255]+P[e>>24&255]).toLowerCase()}function Z(p,t,i){return Math.max(t,Math.min(i,p))}function Rt(p,t){switch(t.constructor){case Float32Array:return p;case Uint32Array:return p/4294967295;case Uint16Array:return p/65535;case Uint8Array:return p/255;case Int32Array:return Math.max(p/2147483647,-1);case Int16Array:return Math.max(p/32767,-1);case Int8Array:return Math.max(p/127,-1);default:throw new Error("Invalid component type.")}}function R(p,t){switch(t.constructor){case Float32Array:return p;case Uint32Array:return Math.round(p*4294967295);case Uint16Array:return Math.round(p*65535);case Uint8Array:return Math.round(p*255);case Int32Array:return Math.round(p*2147483647);case Int16Array:return Math.round(p*32767);case Int8Array:return Math.round(p*127);default:throw new Error("Invalid component type.")}}class Y{constructor(t=0,i=0){Y.prototype.isVector2=!0,this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,e=this.y,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6],this.y=s[1]*i+s[4]*e+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(Z(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y;return i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const e=Math.cos(i),s=Math.sin(i),n=this.x-t.x,r=this.y-t.y;return this.x=n*e-r*s+t.x,this.y=n*s+r*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class gt{constructor(t,i,e,s,n,r,h,a,o){gt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,i,e,s,n,r,h,a,o)}set(t,i,e,s,n,r,h,a,o){const l=this.elements;return l[0]=t,l[1]=s,l[2]=h,l[3]=i,l[4]=n,l[5]=a,l[6]=e,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],this}extractBasis(t,i,e){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],h=e[3],a=e[6],o=e[1],l=e[4],u=e[7],c=e[2],d=e[5],m=e[8],f=s[0],g=s[3],x=s[6],z=s[1],v=s[4],w=s[7],_=s[2],A=s[5],M=s[8];return n[0]=r*f+h*z+a*_,n[3]=r*g+h*v+a*A,n[6]=r*x+h*w+a*M,n[1]=o*f+l*z+u*_,n[4]=o*g+l*v+u*A,n[7]=o*x+l*w+u*M,n[2]=c*f+d*z+m*_,n[5]=c*g+d*v+m*A,n[8]=c*x+d*w+m*M,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return i*r*l-i*h*o-e*n*l+e*h*a+s*n*o-s*r*a}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],u=l*r-h*o,c=h*a-l*n,d=o*n-r*a,m=i*u+e*c+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return t[0]=u*f,t[1]=(s*o-l*e)*f,t[2]=(h*e-s*r)*f,t[3]=c*f,t[4]=(l*i-s*a)*f,t[5]=(s*n-h*i)*f,t[6]=d*f,t[7]=(e*a-o*i)*f,t[8]=(r*i-e*n)*f,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,e,s,n,r,h){const a=Math.cos(n),o=Math.sin(n);return this.set(e*a,e*o,-e*(a*r+o*h)+r+t,-s*o,s*a,-s*(-o*r+a*h)+h+i,0,0,1),this}scale(t,i){return this.premultiply(Qt.makeScale(t,i)),this}rotate(t){return this.premultiply(Qt.makeRotation(-t)),this}translate(t,i){return this.premultiply(Qt.makeTranslation(t,i)),this}makeTranslation(t,i){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,i,0,0,1),this}makeRotation(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,e,i,0,0,0,1),this}makeScale(t,i){return this.set(t,0,0,0,i,0,0,0,1),this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<9;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<9;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Qt=new gt;function $i(p){for(let t=p.length-1;t>=0;--t)if(p[t]>=65535)return!0;return!1}function yi(p){return document.createElementNS("http://www.w3.org/1999/xhtml",p)}const xi={};function Kt(p){p in xi||(xi[p]=!0,console.warn(p))}function ti(p){return p<.04045?p*.0773993808:Math.pow(p*.9478672986+.0521327014,2.4)}let at;class Qi{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{at===void 0&&(at=yi("canvas")),at.width=t.width,at.height=t.height;const e=at.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=at}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const i=yi("canvas");i.width=t.width,i.height=t.height;const e=i.getContext("2d");e.drawImage(t,0,0,t.width,t.height);const s=e.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=ti(n[r]/255)*255;return e.putImageData(s,0,0),i}else if(t.data){const i=t.data.slice(0);for(let e=0;e<i.length;e++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[e]=Math.floor(ti(i[e]/255)*255):i[e]=ti(i[e]);return{data:i,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Ki=0;class te{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ki++}),this.uuid=St(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const e={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,h=s.length;r<h;r++)s[r].isDataTexture?n.push(ii(s[r].image)):n.push(ii(s[r]))}else n=ii(s);e.url=n}return i||(t.images[this.uuid]=e),e}}function ii(p){return typeof HTMLImageElement<"u"&&p instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&p instanceof ImageBitmap?Qi.getDataURL(p):p.data?{data:Array.from(p.data),width:p.width,height:p.height,type:p.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ie=0;class rt extends Zt{constructor(t=rt.DEFAULT_IMAGE,i=rt.DEFAULT_MAPPING,e=Ft,s=Ft,n=Zi,r=Hi,h=Ji,a=Yi,o=rt.DEFAULT_ANISOTROPY,l=jt){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ie++}),this.uuid=St(),this.name="",this.source=new te(t),this.mipmaps=[],this.mapping=i,this.channel=0,this.wrapS=e,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=o,this.format=h,this.internalFormat=null,this.type=a,this.offset=new Y(0,0),this.repeat=new Y(1,1),this.center=new Y(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof l=="string"?this.colorSpace=l:(Kt("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=l===Jt?Gt:jt),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const e={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),i||(t.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Ci)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case di:t.x=t.x-Math.floor(t.x);break;case Ft:t.x=t.x<0?0:1;break;case mi:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case di:t.y=t.y-Math.floor(t.y);break;case Ft:t.y=t.y<0?0:1;break;case mi:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Kt("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Gt?Jt:ji}set encoding(t){Kt("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===Jt?Gt:jt}}rt.DEFAULT_IMAGE=null;rt.DEFAULT_MAPPING=Ci;rt.DEFAULT_ANISOTROPY=1;class At{constructor(t=0,i=0,e=0,s=1){this.isQuaternion=!0,this._x=t,this._y=i,this._z=e,this._w=s}static slerpFlat(t,i,e,s,n,r,h){let a=e[s+0],o=e[s+1],l=e[s+2],u=e[s+3];const c=n[r+0],d=n[r+1],m=n[r+2],f=n[r+3];if(h===0){t[i+0]=a,t[i+1]=o,t[i+2]=l,t[i+3]=u;return}if(h===1){t[i+0]=c,t[i+1]=d,t[i+2]=m,t[i+3]=f;return}if(u!==f||a!==c||o!==d||l!==m){let g=1-h;const x=a*c+o*d+l*m+u*f,z=x>=0?1:-1,v=1-x*x;if(v>Number.EPSILON){const _=Math.sqrt(v),A=Math.atan2(_,x*z);g=Math.sin(g*A)/_,h=Math.sin(h*A)/_}const w=h*z;if(a=a*g+c*w,o=o*g+d*w,l=l*g+m*w,u=u*g+f*w,g===1-h){const _=1/Math.sqrt(a*a+o*o+l*l+u*u);a*=_,o*=_,l*=_,u*=_}}t[i]=a,t[i+1]=o,t[i+2]=l,t[i+3]=u}static multiplyQuaternionsFlat(t,i,e,s,n,r){const h=e[s],a=e[s+1],o=e[s+2],l=e[s+3],u=n[r],c=n[r+1],d=n[r+2],m=n[r+3];return t[i]=h*m+l*u+a*d-o*c,t[i+1]=a*m+l*c+o*u-h*d,t[i+2]=o*m+l*d+h*c-a*u,t[i+3]=l*m-h*u-a*c-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,e,s){return this._x=t,this._y=i,this._z=e,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i){const e=t._x,s=t._y,n=t._z,r=t._order,h=Math.cos,a=Math.sin,o=h(e/2),l=h(s/2),u=h(n/2),c=a(e/2),d=a(s/2),m=a(n/2);switch(r){case"XYZ":this._x=c*l*u+o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u-c*d*m;break;case"YXZ":this._x=c*l*u+o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u+c*d*m;break;case"ZXY":this._x=c*l*u-o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u-c*d*m;break;case"ZYX":this._x=c*l*u-o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u+c*d*m;break;case"YZX":this._x=c*l*u+o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u-c*d*m;break;case"XZY":this._x=c*l*u-o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u+c*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return i!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const e=i/2,s=Math.sin(e);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,e=i[0],s=i[4],n=i[8],r=i[1],h=i[5],a=i[9],o=i[2],l=i[6],u=i[10],c=e+h+u;if(c>0){const d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(l-a)*d,this._y=(n-o)*d,this._z=(r-s)*d}else if(e>h&&e>u){const d=2*Math.sqrt(1+e-h-u);this._w=(l-a)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+o)/d}else if(h>u){const d=2*Math.sqrt(1+h-e-u);this._w=(n-o)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(a+l)/d}else{const d=2*Math.sqrt(1+u-e-h);this._w=(r-s)/d,this._x=(n+o)/d,this._y=(a+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let e=t.dot(i)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Z(this.dot(t),-1,1)))}rotateTowards(t,i){const e=this.angleTo(t);if(e===0)return this;const s=Math.min(1,i/e);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const e=t._x,s=t._y,n=t._z,r=t._w,h=i._x,a=i._y,o=i._z,l=i._w;return this._x=e*l+r*h+s*o-n*a,this._y=s*l+r*a+n*h-e*o,this._z=n*l+r*o+e*a-s*h,this._w=r*l-e*h-s*a-n*o,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);const e=this._x,s=this._y,n=this._z,r=this._w;let h=r*t._w+e*t._x+s*t._y+n*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=r,this._x=e,this._y=s,this._z=n,this;const a=1-h*h;if(a<=Number.EPSILON){const d=1-i;return this._w=d*r+i*this._w,this._x=d*e+i*this._x,this._y=d*s+i*this._y,this._z=d*n+i*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),u=Math.sin((1-i)*l)/o,c=Math.sin(i*l)/o;return this._w=r*u+this._w*c,this._x=e*u+this._x*c,this._y=s*u+this._y*c,this._z=n*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,i,e){return this.copy(t).slerp(i,e)}random(){const t=Math.random(),i=Math.sqrt(1-t),e=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(i*Math.cos(s),e*Math.sin(n),e*Math.cos(n),i*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class y{constructor(t=0,i=0,e=0){y.prototype.isVector3=!0,this.x=t,this.y=i,this.z=e}set(t,i,e){return e===void 0&&(e=this.z),this.x=t,this.y=i,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return this.applyQuaternion(gi.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(gi.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6]*s,this.y=n[1]*i+n[4]*e+n[7]*s,this.z=n[2]*i+n[5]*e+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=t.elements,r=1/(n[3]*i+n[7]*e+n[11]*s+n[15]);return this.x=(n[0]*i+n[4]*e+n[8]*s+n[12])*r,this.y=(n[1]*i+n[5]*e+n[9]*s+n[13])*r,this.z=(n[2]*i+n[6]*e+n[10]*s+n[14])*r,this}applyQuaternion(t){const i=this.x,e=this.y,s=this.z,n=t.x,r=t.y,h=t.z,a=t.w,o=a*i+r*s-h*e,l=a*e+h*i-n*s,u=a*s+n*e-r*i,c=-n*i-r*e-h*s;return this.x=o*a+c*-n+l*-h-u*-r,this.y=l*a+c*-r+u*-n-o*-h,this.z=u*a+c*-h+o*-r-l*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[4]*e+n[8]*s,this.y=n[1]*i+n[5]*e+n[9]*s,this.z=n[2]*i+n[6]*e+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,i){const e=t.x,s=t.y,n=t.z,r=i.x,h=i.y,a=i.z;return this.x=s*a-n*h,this.y=n*r-e*a,this.z=e*h-s*r,this}projectOnVector(t){const i=t.lengthSq();if(i===0)return this.set(0,0,0);const e=t.dot(this)/i;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return ei.copy(this).projectOnVector(t),this.sub(ei)}reflect(t){return this.sub(ei.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(Z(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y,s=this.z-t.z;return i*i+e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,e){const s=Math.sin(i)*t;return this.x=s*Math.sin(e),this.y=Math.cos(i)*t,this.z=s*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,e){return this.x=t*Math.sin(i),this.y=e,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=s,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,i=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(i),this.y=e*Math.sin(i),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ei=new y,gi=new At;class Tt{constructor(t=new y(1/0,1/0,1/0),i=new y(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i+=3)this.expandByPoint(q.fromArray(t,i));return this}setFromBufferAttribute(t){this.makeEmpty();for(let i=0,e=t.count;i<e;i++)this.expandByPoint(q.fromBufferAttribute(t,i));return this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const e=q.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),ht.copy(t.boundingBox),ht.applyMatrix4(t.matrixWorld),this.union(ht);else{const s=t.geometry;if(s!==void 0)if(i&&s.attributes!==void 0&&s.attributes.position!==void 0){const n=s.attributes.position;for(let r=0,h=n.count;r<h;r++)q.fromBufferAttribute(n,r).applyMatrix4(t.matrixWorld),this.expandByPoint(q)}else s.boundingBox===null&&s.computeBoundingBox(),ht.copy(s.boundingBox),ht.applyMatrix4(t.matrixWorld),this.union(ht)}const e=t.children;for(let s=0,n=e.length;s<n;s++)this.expandByObject(e[s],i);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,q),q.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,e;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Mt),Ot.subVectors(this.max,Mt),ot.subVectors(t.a,Mt),lt.subVectors(t.b,Mt),ut.subVectors(t.c,Mt),G.subVectors(lt,ot),$.subVectors(ut,lt),et.subVectors(ot,ut);let i=[0,-G.z,G.y,0,-$.z,$.y,0,-et.z,et.y,G.z,0,-G.x,$.z,0,-$.x,et.z,0,-et.x,-G.y,G.x,0,-$.y,$.x,0,-et.y,et.x,0];return!si(i,ot,lt,ut,Ot)||(i=[1,0,0,0,1,0,0,0,1],!si(i,ot,lt,ut,Ot))?!1:(Nt.crossVectors(G,$),i=[Nt.x,Nt.y,Nt.z],si(i,ot,lt,ut,Ot))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,q).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(q).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(L[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),L[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),L[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),L[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),L[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),L[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),L[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),L[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(L),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const L=[new y,new y,new y,new y,new y,new y,new y,new y],q=new y,ht=new Tt,ot=new y,lt=new y,ut=new y,G=new y,$=new y,et=new y,Mt=new y,Ot=new y,Nt=new y,st=new y;function si(p,t,i,e,s){for(let n=0,r=p.length-3;n<=r;n+=3){st.fromArray(p,n);const h=s.x*Math.abs(st.x)+s.y*Math.abs(st.y)+s.z*Math.abs(st.z),a=t.dot(st),o=i.dot(st),l=e.dot(st);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>h)return!1}return!0}const ee=new Tt,_t=new y,ni=new y;class se{constructor(t=new y,i=-1){this.center=t,this.radius=i}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const e=this.center;i!==void 0?e.copy(i):ee.setFromPoints(t).getCenter(e);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,e.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;_t.subVectors(t,this.center);const i=_t.lengthSq();if(i>this.radius*this.radius){const e=Math.sqrt(i),s=(e-this.radius)*.5;this.center.addScaledVector(_t,s/e),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ni.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(_t.copy(t.center).add(ni)),this.expandByPoint(_t.copy(t.center).sub(ni))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class D{constructor(t,i,e,s,n,r,h,a,o,l,u,c,d,m,f,g){D.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,i,e,s,n,r,h,a,o,l,u,c,d,m,f,g)}set(t,i,e,s,n,r,h,a,o,l,u,c,d,m,f,g){const x=this.elements;return x[0]=t,x[4]=i,x[8]=e,x[12]=s,x[1]=n,x[5]=r,x[9]=h,x[13]=a,x[2]=o,x[6]=l,x[10]=u,x[14]=c,x[3]=d,x[7]=m,x[11]=f,x[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new D().fromArray(this.elements)}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],this}copyPosition(t){const i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}setFromMatrix3(t){const i=t.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,e=t.elements,s=1/ct.setFromMatrixColumn(t,0).length(),n=1/ct.setFromMatrixColumn(t,1).length(),r=1/ct.setFromMatrixColumn(t,2).length();return i[0]=e[0]*s,i[1]=e[1]*s,i[2]=e[2]*s,i[3]=0,i[4]=e[4]*n,i[5]=e[5]*n,i[6]=e[6]*n,i[7]=0,i[8]=e[8]*r,i[9]=e[9]*r,i[10]=e[10]*r,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){const i=this.elements,e=t.x,s=t.y,n=t.z,r=Math.cos(e),h=Math.sin(e),a=Math.cos(s),o=Math.sin(s),l=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const c=r*l,d=r*u,m=h*l,f=h*u;i[0]=a*l,i[4]=-a*u,i[8]=o,i[1]=d+m*o,i[5]=c-f*o,i[9]=-h*a,i[2]=f-c*o,i[6]=m+d*o,i[10]=r*a}else if(t.order==="YXZ"){const c=a*l,d=a*u,m=o*l,f=o*u;i[0]=c+f*h,i[4]=m*h-d,i[8]=r*o,i[1]=r*u,i[5]=r*l,i[9]=-h,i[2]=d*h-m,i[6]=f+c*h,i[10]=r*a}else if(t.order==="ZXY"){const c=a*l,d=a*u,m=o*l,f=o*u;i[0]=c-f*h,i[4]=-r*u,i[8]=m+d*h,i[1]=d+m*h,i[5]=r*l,i[9]=f-c*h,i[2]=-r*o,i[6]=h,i[10]=r*a}else if(t.order==="ZYX"){const c=r*l,d=r*u,m=h*l,f=h*u;i[0]=a*l,i[4]=m*o-d,i[8]=c*o+f,i[1]=a*u,i[5]=f*o+c,i[9]=d*o-m,i[2]=-o,i[6]=h*a,i[10]=r*a}else if(t.order==="YZX"){const c=r*a,d=r*o,m=h*a,f=h*o;i[0]=a*l,i[4]=f-c*u,i[8]=m*u+d,i[1]=u,i[5]=r*l,i[9]=-h*l,i[2]=-o*l,i[6]=d*u+m,i[10]=c-f*u}else if(t.order==="XZY"){const c=r*a,d=r*o,m=h*a,f=h*o;i[0]=a*l,i[4]=-u,i[8]=o*l,i[1]=c*u+f,i[5]=r*l,i[9]=d*u-m,i[2]=m*u-d,i[6]=h*l,i[10]=f*u+c}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ne,t,re)}lookAt(t,i,e){const s=this.elements;return O.subVectors(t,i),O.lengthSq()===0&&(O.z=1),O.normalize(),Q.crossVectors(e,O),Q.lengthSq()===0&&(Math.abs(e.z)===1?O.x+=1e-4:O.z+=1e-4,O.normalize(),Q.crossVectors(e,O)),Q.normalize(),It.crossVectors(O,Q),s[0]=Q.x,s[4]=It.x,s[8]=O.x,s[1]=Q.y,s[5]=It.y,s[9]=O.y,s[2]=Q.z,s[6]=It.z,s[10]=O.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,r=e[0],h=e[4],a=e[8],o=e[12],l=e[1],u=e[5],c=e[9],d=e[13],m=e[2],f=e[6],g=e[10],x=e[14],z=e[3],v=e[7],w=e[11],_=e[15],A=s[0],M=s[4],it=s[8],X=s[12],b=s[1],E=s[5],k=s[9],B=s[13],J=s[2],F=s[6],j=s[10],vt=s[14],Ct=s[3],Et=s[7],kt=s[11],Bt=s[15];return n[0]=r*A+h*b+a*J+o*Ct,n[4]=r*M+h*E+a*F+o*Et,n[8]=r*it+h*k+a*j+o*kt,n[12]=r*X+h*B+a*vt+o*Bt,n[1]=l*A+u*b+c*J+d*Ct,n[5]=l*M+u*E+c*F+d*Et,n[9]=l*it+u*k+c*j+d*kt,n[13]=l*X+u*B+c*vt+d*Bt,n[2]=m*A+f*b+g*J+x*Ct,n[6]=m*M+f*E+g*F+x*Et,n[10]=m*it+f*k+g*j+x*kt,n[14]=m*X+f*B+g*vt+x*Bt,n[3]=z*A+v*b+w*J+_*Ct,n[7]=z*M+v*E+w*F+_*Et,n[11]=z*it+v*k+w*j+_*kt,n[15]=z*X+v*B+w*vt+_*Bt,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[4],s=t[8],n=t[12],r=t[1],h=t[5],a=t[9],o=t[13],l=t[2],u=t[6],c=t[10],d=t[14],m=t[3],f=t[7],g=t[11],x=t[15];return m*(+n*a*u-s*o*u-n*h*c+e*o*c+s*h*d-e*a*d)+f*(+i*a*d-i*o*c+n*r*c-s*r*d+s*o*l-n*a*l)+g*(+i*o*u-i*h*d-n*r*u+e*r*d+n*h*l-e*o*l)+x*(-s*h*l-i*a*u+i*h*c+s*r*u-e*r*c+e*a*l)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,e){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=i,s[14]=e),this}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],u=t[9],c=t[10],d=t[11],m=t[12],f=t[13],g=t[14],x=t[15],z=u*g*o-f*c*o+f*a*d-h*g*d-u*a*x+h*c*x,v=m*c*o-l*g*o-m*a*d+r*g*d+l*a*x-r*c*x,w=l*f*o-m*u*o+m*h*d-r*f*d-l*h*x+r*u*x,_=m*u*a-l*f*a-m*h*c+r*f*c+l*h*g-r*u*g,A=i*z+e*v+s*w+n*_;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/A;return t[0]=z*M,t[1]=(f*c*n-u*g*n-f*s*d+e*g*d+u*s*x-e*c*x)*M,t[2]=(h*g*n-f*a*n+f*s*o-e*g*o-h*s*x+e*a*x)*M,t[3]=(u*a*n-h*c*n-u*s*o+e*c*o+h*s*d-e*a*d)*M,t[4]=v*M,t[5]=(l*g*n-m*c*n+m*s*d-i*g*d-l*s*x+i*c*x)*M,t[6]=(m*a*n-r*g*n-m*s*o+i*g*o+r*s*x-i*a*x)*M,t[7]=(r*c*n-l*a*n+l*s*o-i*c*o-r*s*d+i*a*d)*M,t[8]=w*M,t[9]=(m*u*n-l*f*n-m*e*d+i*f*d+l*e*x-i*u*x)*M,t[10]=(r*f*n-m*h*n+m*e*o-i*f*o-r*e*x+i*h*x)*M,t[11]=(l*h*n-r*u*n-l*e*o+i*u*o+r*e*d-i*h*d)*M,t[12]=_*M,t[13]=(l*f*s-m*u*s+m*e*c-i*f*c-l*e*g+i*u*g)*M,t[14]=(m*h*s-r*f*s-m*e*a+i*f*a+r*e*g-i*h*g)*M,t[15]=(r*u*s-l*h*s+l*e*a-i*u*a-r*e*c+i*h*c)*M,this}scale(t){const i=this.elements,e=t.x,s=t.y,n=t.z;return i[0]*=e,i[4]*=s,i[8]*=n,i[1]*=e,i[5]*=s,i[9]*=n,i[2]*=e,i[6]*=s,i[10]*=n,i[3]*=e,i[7]*=s,i[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,s))}makeTranslation(t,i,e){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const e=Math.cos(i),s=Math.sin(i),n=1-e,r=t.x,h=t.y,a=t.z,o=n*r,l=n*h;return this.set(o*r+e,o*h-s*a,o*a+s*h,0,o*h+s*a,l*h+e,l*a-s*r,0,o*a-s*h,l*a+s*r,n*a*a+e,0,0,0,0,1),this}makeScale(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,i,e,s,n,r){return this.set(1,e,n,0,t,1,r,0,i,s,1,0,0,0,0,1),this}compose(t,i,e){const s=this.elements,n=i._x,r=i._y,h=i._z,a=i._w,o=n+n,l=r+r,u=h+h,c=n*o,d=n*l,m=n*u,f=r*l,g=r*u,x=h*u,z=a*o,v=a*l,w=a*u,_=e.x,A=e.y,M=e.z;return s[0]=(1-(f+x))*_,s[1]=(d+w)*_,s[2]=(m-v)*_,s[3]=0,s[4]=(d-w)*A,s[5]=(1-(c+x))*A,s[6]=(g+z)*A,s[7]=0,s[8]=(m+v)*M,s[9]=(g-z)*M,s[10]=(1-(c+f))*M,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,i,e){const s=this.elements;let n=ct.set(s[0],s[1],s[2]).length();const r=ct.set(s[4],s[5],s[6]).length(),h=ct.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],U.copy(this);const o=1/n,l=1/r,u=1/h;return U.elements[0]*=o,U.elements[1]*=o,U.elements[2]*=o,U.elements[4]*=l,U.elements[5]*=l,U.elements[6]*=l,U.elements[8]*=u,U.elements[9]*=u,U.elements[10]*=u,i.setFromRotationMatrix(U),e.x=n,e.y=r,e.z=h,this}makePerspective(t,i,e,s,n,r,h=Pt){const a=this.elements,o=2*n/(i-t),l=2*n/(e-s),u=(i+t)/(i-t),c=(e+s)/(e-s);let d,m;if(h===Pt)d=-(r+n)/(r-n),m=-2*r*n/(r-n);else if(h===fi)d=-r/(r-n),m=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+h);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,i,e,s,n,r,h=Pt){const a=this.elements,o=1/(i-t),l=1/(e-s),u=1/(r-n),c=(i+t)*o,d=(e+s)*l;let m,f;if(h===Pt)m=(r+n)*u,f=-2*u;else if(h===fi)m=n*u,f=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+h);return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=f,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<16;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<16;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t[i+9]=e[9],t[i+10]=e[10],t[i+11]=e[11],t[i+12]=e[12],t[i+13]=e[13],t[i+14]=e[14],t[i+15]=e[15],t}}const ct=new y,U=new D,ne=new y(0,0,0),re=new y(1,1,1),Q=new y,It=new y,O=new y,Mi=new D,_i=new At;class Ht{constructor(t=0,i=0,e=0,s=Ht.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=i,this._z=e,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,e,s=this._order){return this._x=t,this._y=i,this._z=e,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,e=!0){const s=t.elements,n=s[0],r=s[4],h=s[8],a=s[1],o=s[5],l=s[9],u=s[2],c=s[6],d=s[10];switch(i){case"XYZ":this._y=Math.asin(Z(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Z(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(h,d),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(Z(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-Z(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(c,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(Z(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(h,d));break;case"XZY":this._z=Math.asin(-Z(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(h,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,i,e){return Mi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Mi,i,e)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return _i.setFromEuler(this),this.setFromQuaternion(_i,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ht.DEFAULT_ORDER="XYZ";class ae{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let he=0;const bi=new y,dt=new At,V=new D,Ut=new y,bt=new y,oe=new y,le=new At,wi=new y(1,0,0),zi=new y(0,1,0),Si=new y(0,0,1),ue={type:"added"},Ai={type:"removed"};class tt extends Zt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:he++}),this.uuid=St(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tt.DEFAULT_UP.clone();const t=new y,i=new Ht,e=new At,s=new y(1,1,1);function n(){e.setFromEuler(i,!1)}function r(){i.setFromQuaternion(e,void 0,!1)}i._onChange(n),e._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new D},normalMatrix:{value:new gt}}),this.matrix=new D,this.matrixWorld=new D,this.matrixAutoUpdate=tt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ae,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return dt.setFromAxisAngle(t,i),this.quaternion.multiply(dt),this}rotateOnWorldAxis(t,i){return dt.setFromAxisAngle(t,i),this.quaternion.premultiply(dt),this}rotateX(t){return this.rotateOnAxis(wi,t)}rotateY(t){return this.rotateOnAxis(zi,t)}rotateZ(t){return this.rotateOnAxis(Si,t)}translateOnAxis(t,i){return bi.copy(t).applyQuaternion(this.quaternion),this.position.add(bi.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(wi,t)}translateY(t){return this.translateOnAxis(zi,t)}translateZ(t){return this.translateOnAxis(Si,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(V.copy(this.matrixWorld).invert())}lookAt(t,i,e){t.isVector3?Ut.copy(t):Ut.set(t,i,e);const s=this.parent;this.updateWorldMatrix(!0,!1),bt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?V.lookAt(bt,Ut,this.up):V.lookAt(Ut,bt,this.up),this.quaternion.setFromRotationMatrix(V),s&&(V.extractRotation(s.matrixWorld),dt.setFromRotationMatrix(V),this.quaternion.premultiply(dt.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ue)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const i=this.children.indexOf(t);return i!==-1&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(Ai)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const i=this.children[t];i.parent=null,i.dispatchEvent(Ai)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),V.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),V.multiply(t.parent.matrixWorld)),t.applyMatrix4(V),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let e=0,s=this.children.length;e<s;e++){const r=this.children[e].getObjectByProperty(t,i);if(r!==void 0)return r}}getObjectsByProperty(t,i){let e=[];this[t]===i&&e.push(this);for(let s=0,n=this.children.length;s<n;s++){const r=this.children[s].getObjectsByProperty(t,i);r.length>0&&(e=e.concat(r))}return e}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bt,t,oe),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bt,le,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverseVisible(t)}traverseAncestors(t){const i=this.parent;i!==null&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let e=0,s=i.length;e<s;e++){const n=i[e];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,i){const e=this.parent;if(t===!0&&e!==null&&e.matrixWorldAutoUpdate===!0&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),i===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++){const h=s[n];h.matrixWorldAutoUpdate===!0&&h.updateWorldMatrix(!1,!0)}}}toJSON(t){const i=t===void 0||typeof t=="string",e={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function n(h,a){return h[a.uuid]===void 0&&(h[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const h=this.geometry.parameters;if(h!==void 0&&h.shapes!==void 0){const a=h.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){const u=a[o];n(t.shapes,u)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const h=[];for(let a=0,o=this.material.length;a<o;a++)h.push(n(t.materials,this.material[a]));s.material=h}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let h=0;h<this.children.length;h++)s.children.push(this.children[h].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let h=0;h<this.animations.length;h++){const a=this.animations[h];s.animations.push(n(t.animations,a))}}if(i){const h=r(t.geometries),a=r(t.materials),o=r(t.textures),l=r(t.images),u=r(t.shapes),c=r(t.skeletons),d=r(t.animations),m=r(t.nodes);h.length>0&&(e.geometries=h),a.length>0&&(e.materials=a),o.length>0&&(e.textures=o),l.length>0&&(e.images=l),u.length>0&&(e.shapes=u),c.length>0&&(e.skeletons=c),d.length>0&&(e.animations=d),m.length>0&&(e.nodes=m)}return e.object=s,e;function r(h){const a=[];for(const o in h){const l=h[o];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations,this.userData=JSON.parse(JSON.stringify(t.userData)),i===!0)for(let e=0;e<t.children.length;e++){const s=t.children[e];this.add(s.clone())}return this}}tt.DEFAULT_UP=new y(0,1,0);tt.DEFAULT_MATRIX_AUTO_UPDATE=!0;tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let ce=0;class de extends Zt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ce++}),this.uuid=St(),this.name="",this.type="Material",this.blending=ci,this.side=ui,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Li,this.blendDst=qi,this.blendEquation=Di,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Vi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Gi,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$t,this.stencilZFail=$t,this.stencilZPass=$t,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const i in t){const e=t[i];if(e===void 0){console.warn(`THREE.Material: parameter '${i}' has value of undefined.`);continue}const s=this[i];if(s===void 0){console.warn(`THREE.Material: '${i}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(e):s&&s.isVector3&&e&&e.isVector3?s.copy(e):this[i]=e}}toJSON(t){const i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{}});const e={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(e.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(e.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(e.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(t).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(t).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==ci&&(e.blending=this.blending),this.side!==ui&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaHash===!0&&(e.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(e.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(e.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=this.flatShading),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function s(n){const r=[];for(const h in n){const a=n[h];delete a.metadata,r.push(a)}return r}if(i){const n=s(t.textures),r=s(t.images);n.length>0&&(e.textures=n),r.length>0&&(e.images=r)}return e}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let e=null;if(i!==null){const s=i.length;e=new Array(s);for(let n=0;n!==s;++n)e[n]=i[n].clone()}return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}const T=new y,Wt=new Y;class xt{constructor(t,i,e=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=i,this.count=t!==void 0?t.length/i:0,this.normalized=e,this.usage=pi,this.updateRange={offset:0,count:-1},this.gpuType=Xi,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,i,e){t*=this.itemSize,e*=i.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=i.array[e+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let i=0,e=this.count;i<e;i++)Wt.fromBufferAttribute(this,i),Wt.applyMatrix3(t),this.setXY(i,Wt.x,Wt.y);else if(this.itemSize===3)for(let i=0,e=this.count;i<e;i++)T.fromBufferAttribute(this,i),T.applyMatrix3(t),this.setXYZ(i,T.x,T.y,T.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)T.fromBufferAttribute(this,i),T.applyMatrix4(t),this.setXYZ(i,T.x,T.y,T.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)T.fromBufferAttribute(this,i),T.applyNormalMatrix(t),this.setXYZ(i,T.x,T.y,T.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)T.fromBufferAttribute(this,i),T.transformDirection(t),this.setXYZ(i,T.x,T.y,T.z);return this}set(t,i=0){return this.array.set(t,i),this}getX(t){let i=this.array[t*this.itemSize];return this.normalized&&(i=Rt(i,this.array)),i}setX(t,i){return this.normalized&&(i=R(i,this.array)),this.array[t*this.itemSize]=i,this}getY(t){let i=this.array[t*this.itemSize+1];return this.normalized&&(i=Rt(i,this.array)),i}setY(t,i){return this.normalized&&(i=R(i,this.array)),this.array[t*this.itemSize+1]=i,this}getZ(t){let i=this.array[t*this.itemSize+2];return this.normalized&&(i=Rt(i,this.array)),i}setZ(t,i){return this.normalized&&(i=R(i,this.array)),this.array[t*this.itemSize+2]=i,this}getW(t){let i=this.array[t*this.itemSize+3];return this.normalized&&(i=Rt(i,this.array)),i}setW(t,i){return this.normalized&&(i=R(i,this.array)),this.array[t*this.itemSize+3]=i,this}setXY(t,i,e){return t*=this.itemSize,this.normalized&&(i=R(i,this.array),e=R(e,this.array)),this.array[t+0]=i,this.array[t+1]=e,this}setXYZ(t,i,e,s){return t*=this.itemSize,this.normalized&&(i=R(i,this.array),e=R(e,this.array),s=R(s,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this}setXYZW(t,i,e,s,n){return t*=this.itemSize,this.normalized&&(i=R(i,this.array),e=R(e,this.array),s=R(s,this.array),n=R(n,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==pi&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}class me extends xt{constructor(t,i,e){super(new Uint16Array(t),i,e)}}class pe extends xt{constructor(t,i,e){super(new Uint32Array(t),i,e)}}class Yt extends xt{constructor(t,i,e){super(new Float32Array(t),i,e)}}let fe=0;const I=new D,ri=new tt,mt=new y,N=new Tt,wt=new Tt,C=new y;class li extends Zt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fe++}),this.uuid=St(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new($i(t)?pe:me)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,i){return this.attributes[t]=i,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,i,e=0){this.groups.push({start:t,count:i,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}applyMatrix4(t){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(t),i.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new gt().getNormalMatrix(t);e.applyNormalMatrix(n),e.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return I.makeRotationFromQuaternion(t),this.applyMatrix4(I),this}rotateX(t){return I.makeRotationX(t),this.applyMatrix4(I),this}rotateY(t){return I.makeRotationY(t),this.applyMatrix4(I),this}rotateZ(t){return I.makeRotationZ(t),this.applyMatrix4(I),this}translate(t,i,e){return I.makeTranslation(t,i,e),this.applyMatrix4(I),this}scale(t,i,e){return I.makeScale(t,i,e),this.applyMatrix4(I),this}lookAt(t){return ri.lookAt(t),ri.updateMatrix(),this.applyMatrix4(ri.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(mt).negate(),this.translate(mt.x,mt.y,mt.z),this}setFromPoints(t){const i=[];for(let e=0,s=t.length;e<s;e++){const n=t[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Yt(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Tt);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new y(-1/0,-1/0,-1/0),new y(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),i)for(let e=0,s=i.length;e<s;e++){const n=i[e];N.setFromBufferAttribute(n),this.morphTargetsRelative?(C.addVectors(this.boundingBox.min,N.min),this.boundingBox.expandByPoint(C),C.addVectors(this.boundingBox.max,N.max),this.boundingBox.expandByPoint(C)):(this.boundingBox.expandByPoint(N.min),this.boundingBox.expandByPoint(N.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new se);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new y,1/0);return}if(t){const e=this.boundingSphere.center;if(N.setFromBufferAttribute(t),i)for(let n=0,r=i.length;n<r;n++){const h=i[n];wt.setFromBufferAttribute(h),this.morphTargetsRelative?(C.addVectors(N.min,wt.min),N.expandByPoint(C),C.addVectors(N.max,wt.max),N.expandByPoint(C)):(N.expandByPoint(wt.min),N.expandByPoint(wt.max))}N.getCenter(e);let s=0;for(let n=0,r=t.count;n<r;n++)C.fromBufferAttribute(t,n),s=Math.max(s,e.distanceToSquared(C));if(i)for(let n=0,r=i.length;n<r;n++){const h=i[n],a=this.morphTargetsRelative;for(let o=0,l=h.count;o<l;o++)C.fromBufferAttribute(h,o),a&&(mt.fromBufferAttribute(t,o),C.add(mt)),s=Math.max(s,e.distanceToSquared(C))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,i=this.attributes;if(t===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.array,s=i.position.array,n=i.normal.array,r=i.uv.array,h=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xt(new Float32Array(4*h),4));const a=this.getAttribute("tangent").array,o=[],l=[];for(let b=0;b<h;b++)o[b]=new y,l[b]=new y;const u=new y,c=new y,d=new y,m=new Y,f=new Y,g=new Y,x=new y,z=new y;function v(b,E,k){u.fromArray(s,b*3),c.fromArray(s,E*3),d.fromArray(s,k*3),m.fromArray(r,b*2),f.fromArray(r,E*2),g.fromArray(r,k*2),c.sub(u),d.sub(u),f.sub(m),g.sub(m);const B=1/(f.x*g.y-g.x*f.y);isFinite(B)&&(x.copy(c).multiplyScalar(g.y).addScaledVector(d,-f.y).multiplyScalar(B),z.copy(d).multiplyScalar(f.x).addScaledVector(c,-g.x).multiplyScalar(B),o[b].add(x),o[E].add(x),o[k].add(x),l[b].add(z),l[E].add(z),l[k].add(z))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.length}]);for(let b=0,E=w.length;b<E;++b){const k=w[b],B=k.start,J=k.count;for(let F=B,j=B+J;F<j;F+=3)v(e[F+0],e[F+1],e[F+2])}const _=new y,A=new y,M=new y,it=new y;function X(b){M.fromArray(n,b*3),it.copy(M);const E=o[b];_.copy(E),_.sub(M.multiplyScalar(M.dot(E))).normalize(),A.crossVectors(it,E);const B=A.dot(l[b])<0?-1:1;a[b*4]=_.x,a[b*4+1]=_.y,a[b*4+2]=_.z,a[b*4+3]=B}for(let b=0,E=w.length;b<E;++b){const k=w[b],B=k.start,J=k.count;for(let F=B,j=B+J;F<j;F+=3)X(e[F+0]),X(e[F+1]),X(e[F+2])}}computeVertexNormals(){const t=this.index,i=this.getAttribute("position");if(i!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new xt(new Float32Array(i.count*3),3),this.setAttribute("normal",e);else for(let c=0,d=e.count;c<d;c++)e.setXYZ(c,0,0,0);const s=new y,n=new y,r=new y,h=new y,a=new y,o=new y,l=new y,u=new y;if(t)for(let c=0,d=t.count;c<d;c+=3){const m=t.getX(c+0),f=t.getX(c+1),g=t.getX(c+2);s.fromBufferAttribute(i,m),n.fromBufferAttribute(i,f),r.fromBufferAttribute(i,g),l.subVectors(r,n),u.subVectors(s,n),l.cross(u),h.fromBufferAttribute(e,m),a.fromBufferAttribute(e,f),o.fromBufferAttribute(e,g),h.add(l),a.add(l),o.add(l),e.setXYZ(m,h.x,h.y,h.z),e.setXYZ(f,a.x,a.y,a.z),e.setXYZ(g,o.x,o.y,o.z)}else for(let c=0,d=i.count;c<d;c+=3)s.fromBufferAttribute(i,c+0),n.fromBufferAttribute(i,c+1),r.fromBufferAttribute(i,c+2),l.subVectors(r,n),u.subVectors(s,n),l.cross(u),e.setXYZ(c+0,l.x,l.y,l.z),e.setXYZ(c+1,l.x,l.y,l.z),e.setXYZ(c+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)C.fromBufferAttribute(t,i),C.normalize(),t.setXYZ(i,C.x,C.y,C.z)}toNonIndexed(){function t(h,a){const o=h.array,l=h.itemSize,u=h.normalized,c=new o.constructor(a.length*l);let d=0,m=0;for(let f=0,g=a.length;f<g;f++){h.isInterleavedBufferAttribute?d=a[f]*h.data.stride+h.offset:d=a[f]*l;for(let x=0;x<l;x++)c[m++]=o[d++]}return new xt(c,l,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new li,e=this.index.array,s=this.attributes;for(const h in s){const a=s[h],o=t(a,e);i.setAttribute(h,o)}const n=this.morphAttributes;for(const h in n){const a=[],o=n[h];for(let l=0,u=o.length;l<u;l++){const c=o[l],d=t(c,e);a.push(d)}i.morphAttributes[h]=a}i.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let h=0,a=r.length;h<a;h++){const o=r[h];i.addGroup(o.start,o.count,o.materialIndex)}return i}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const o in a)a[o]!==void 0&&(t[o]=a[o]);return t}t.data={attributes:{}};const i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const e=this.attributes;for(const a in e){const o=e[a];t.data.attributes[a]=o.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const o=this.morphAttributes[a],l=[];for(let u=0,c=o.length;u<c;u++){const d=o[u];l.push(d.toJSON(t.data))}l.length>0&&(s[a]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const h=this.boundingSphere;return h!==null&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const e=t.index;e!==null&&this.setIndex(e.clone(i));const s=t.attributes;for(const o in s){const l=s[o];this.setAttribute(o,l.clone(i))}const n=t.morphAttributes;for(const o in n){const l=[],u=n[o];for(let c=0,d=u.length;c<d;c++)l.push(u[c].clone(i));this.morphAttributes[o]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let o=0,l=r.length;o<l;o++){const u=r[o];this.addGroup(u.start,u.count,u.materialIndex)}const h=t.boundingBox;h!==null&&(this.boundingBox=h.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}function ye(p){const t={};for(const i in p){t[i]={};for(const e in p[i]){const s=p[i][e];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[i][e]=null):t[i][e]=s.clone():Array.isArray(s)?t[i][e]=s.slice():t[i][e]=s}}return t}function xe(p){const t=[];for(let i=0;i<p.length;i++)t.push(p[i].clone());return t}var ge=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Me=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _e extends de{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ge,this.fragmentShader=Me,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ye(t.uniforms),this.uniformsGroups=xe(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const i=super.toJSON(t);i.glslVersion=this.glslVersion,i.uniforms={};for(const s in this.uniforms){const r=this.uniforms[s].value;r&&r.isTexture?i.uniforms[s]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?i.uniforms[s]={type:"c",value:r.getHex()}:r&&r.isVector2?i.uniforms[s]={type:"v2",value:r.toArray()}:r&&r.isVector3?i.uniforms[s]={type:"v3",value:r.toArray()}:r&&r.isVector4?i.uniforms[s]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?i.uniforms[s]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?i.uniforms[s]={type:"m4",value:r.toArray()}:i.uniforms[s]={value:r}}Object.keys(this.defines).length>0&&(i.defines=this.defines),i.vertexShader=this.vertexShader,i.fragmentShader=this.fragmentShader,i.lights=this.lights,i.clipping=this.clipping;const e={};for(const s in this.extensions)this.extensions[s]===!0&&(e[s]=!0);return Object.keys(e).length>0&&(i.extensions=e),i}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:vi}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=vi);const Ti=5e4,be=1e5,Xt=new li,hi=[],Ei=[],ki=[];for(let p=0;p<Ti+be;p++){let t=Math.random()*Math.PI*2,i=Math.acos(Math.random()*2-1),e=(Math.random()*.9+.1)*Math.PI*.1,s=Math.random()*.9+.1;ki.push(t,i,e,s);let n=Math.random()*1.5+.5;if(Ei.push(n),p<Ti){let r=Math.random()*.5+9.5,{x:h,y:a,z:o}=new y().randomDirection().multiplyScalar(r);hi.push(h,a,o)}else{let r=10,h=40,a=Math.pow(Math.random(),1.5),o=Math.sqrt(h*h*a+(1-a)*r*r),{x:l,y:u,z:c}=new y().setFromCylindricalCoords(o,Math.random()*2*Math.PI,(Math.random()-.5)*2);hi.push(l,u,c)}}Xt.setAttribute("position",new Yt(hi,3));Xt.setAttribute("aSize",new Yt(Ei,1));Xt.setAttribute("aShift",new Yt(ki,4));const we=`
  attribute float aSize;
  attribute vec4 aShift;

  uniform float uTime;

  varying vec3 vColor;

  const float PI = 3.141592653589793238;

  void main() {
      // float d = abs(position.y) / 10.0;
      float d = length(abs(position) / vec3(40., 10., 40.)); // 中间黄色、外面紫色
      d = clamp(d, 0., 1.);
      
      // rgb(227, 155, 0)
      // rgb(100, 50, 255)
      vec3 color1 = vec3(227., 155., 0.);
      vec3 color2 = vec3(100., 50., 255.);
      vColor = mix(color1, color2, d) / 255.;

      vec3 transformed = position;
      float theta = mod(aShift.x + aShift.z * uTime, PI * 2.);
      float phi = mod(aShift.y + aShift.z * uTime, PI * 2.);
      transformed += vec3(sin(phi) * cos(theta), cos(phi), sin(phi) * sin(theta)) * aShift.w;
      
      vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.0);
      gl_PointSize = aSize * 50.0 / -mvPosition.z;
      gl_Position = projectionMatrix * mvPosition;
  }
`,ze=`
  varying vec3 vColor;

  void main() {
    float d = length(gl_PointCoord.xy - 0.5);
    if (d > 0.5) discard;
    // gl_FragColor = vec4(vColor, step(0.5, 1.0 - d));
    gl_FragColor = vec4(vColor, smoothstep(0.5, 0.1, d));
  }
`,Bi=new _e({vertexShader:we,fragmentShader:ze,uniforms:{uTime:{value:0}},transparent:!0,blending:Wi,depthTest:!1}),Se=`
uniform sampler2D map;
uniform float width;
uniform float height;
uniform float pointSize;

varying vec3 vLocalPos;

void main() {
  vec2 uv = position.xy + vec2( 0.5 / width, 0.5 / height );
  vLocalPos = texture2D( map, uv ).rgb;
  vec4 mvPosition = modelViewMatrix * vec4( vLocalPos, 1.0 );

  gl_Position = projectionMatrix * mvPosition;
  gl_PointSize = pointSize * (1.0 / -mvPosition.z);
}
`,Ae=`
uniform vec3 baseCol;
uniform vec3 posCol;

varying vec3 vLocalPos;

void main() {
  float depth = smoothstep( 10.24, 1.0, gl_FragCoord.z / gl_FragCoord.w );
  vec3 col = baseCol + vLocalPos * posCol;

  gl_FragColor = vec4( col, depth );
}
`,Te=`
uniform sampler2D origin;
uniform float timer;
uniform vec4 mousePos;

float rand(vec2 co){
  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

vec4 runSimulation(vec4 pos) {
  float x = pos.x + timer;
  float y = pos.y;
  float z = pos.z;
  
  pos.x += sin( y * 3.0 ) * cos( z * 11.0 ) * 0.005;
  pos.y += sin( x * 5.0 ) * cos( z * 13.0 ) * 0.005;
  pos.z += sin( x * 7.0 ) * cos( y * 17.0 ) * 0.005;

  vec3 posToMouse = pos.xyz - mousePos.xyz;
  float dist = mousePos.w - length(posToMouse);
  if (dist > 0.0) {
    pos += vec4(normalize(posToMouse) * mousePos.w / 10.0, 0.0);
  }

  return pos;
}

void main() {
  vec2 cellSize = 1.0 / resolution.xy;
  vec2 uv = gl_FragCoord.xy * cellSize;

  vec4 pos = vec4(0);
  if ( rand(uv + timer ) > 0.97 ) {
    pos = texture2D( origin, uv );
  } else {
    pos = texture2D( tPositions, uv );
    pos = runSimulation(pos);
  }

  gl_FragColor = pos;
}
`,ve=`
uniform sampler2D map;
uniform float width;
uniform float height;
uniform float pointSize;

varying vec2 vHighPrecisionZW;

void main() {
  vec2 uv = position.xy + vec2( 0.5 / width, 0.5 / height );
  vec3 pos = texture2D( map, uv ).rgb;
  vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );
  gl_Position = projectionMatrix * mvPosition;
  gl_PointSize = pointSize;

  vHighPrecisionZW = gl_Position.zw;
}
`,Ce=`
#include <packing>
varying vec2 vHighPrecisionZW;

void main() {
  vec2 uv = (gl_PointCoord - 0.5) * 2.0;
  if (length(uv) > 0.4) discard;

  float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
  gl_FragColor = packDepthToRGBA( fragCoordZ );
}
`,pt=1024,Dt=1024;let ai,W,ft,K,yt,Lt,Vt,nt,H,zt;const oi=new S.Vector2,qt=new S.Vector3(1e5,1e5,1e5),Fi=new S.Clock(!1),Ee=new Ri;Ee.load("fonts/MicrosoftYaHei.json.json",function(p){ke(p),Fi.start(),Pi()});function ke(p){ai=document.createElement("div"),document.body.appendChild(ai),ft=new S.Scene,W=new S.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.01,1024),W.position.set(0,3,24),W.lookAt(ft.position),ft.add(W),yt=new S.Raycaster,K=new S.WebGLRenderer,K.setPixelRatio(window.devicePixelRatio),K.setSize(window.innerWidth,window.innerHeight),ai.appendChild(K.domElement);const t=new S.BufferGeometry,i=[];for(let o=0,l=pt*Dt;o<l;o++)i.push(o%pt/pt),i.push(Math.floor(o/pt)/Dt),i.push(0);t.setAttribute("position",new S.Float32BufferAttribute(i,3)),Vt={map:{value:null},width:{value:pt},height:{value:Dt},pointSize:{value:1.5*window.devicePixelRatio},baseCol:{value:new S.Color(.8,.1,.5)},posCol:{value:new S.Color(.07,.29,4)}};const e=new S.ShaderMaterial({uniforms:Vt,vertexShader:Se,fragmentShader:Ae,blending:S.AdditiveBlending,transparent:!0,depthWrite:!1,depthTest:!0}),s=new S.ShaderMaterial({uniforms:Vt,vertexShader:ve,fragmentShader:Ce,depthWrite:!0,depthTest:!0});Lt=new S.Points(t,e),Lt.renderOrder=1,Lt.customDepthMaterial=s,ft.add(Lt),nt=new Ii(pt,Dt,K);const n=nt.createTexture();n.minFilter=S.NearestFilter,n.magFilter=S.NearestFilter;const r=Be(p);Fe(r,n),H=nt.addVariable("tPositions",Te,n),nt.setVariableDependencies(H,[H]),H.material.uniforms.origin={value:n},H.material.uniforms.timer={value:0},H.material.uniforms.mousePos={value:new S.Vector4(100,100,100,0)};const h=nt.init();h!==null&&console.error(h),zt=new S.Points(Xt,Bi),zt.rotation.order="ZYX",zt.rotation.z=.2,ft.add(zt),new Ui(W,K.domElement).update(),document.addEventListener("mousemove",Pe),window.addEventListener("resize",Re)}function Be(p){const t=new Oi("我爱吴苹苹",{font:p,size:1,height:.25});return t.center(),t}function Fe(p,t){const i=new S.Mesh(p,new S.MeshBasicMaterial),e=new Ni(i).build();let s=new S.Vector3;const n=t.image.data;for(let r=0,h=n.length;r<h;r+=4)e.sample(s),n[r]=s.x,n[r+1]=s.y,n[r+2]=s.z,n[r+3]=0}function Pe(p){oi.x=p.clientX/window.innerWidth*2-1,oi.y=-(p.clientY/window.innerHeight)*2+1}function Re(){W.aspect=window.innerWidth/window.innerHeight,W.updateProjectionMatrix(),K.setSize(window.innerWidth,window.innerHeight)}function Oe(){W.updateMatrixWorld(),yt.setFromCamera(oi,W);const p=-yt.ray.origin.z/yt.ray.direction.z;qt.copy(yt.ray.direction).multiplyScalar(p).add(yt.ray.origin),H.material.uniforms.mousePos.value.set(qt.x,qt.y,qt.z,.2)}function Pi(){requestAnimationFrame(Pi),Ne()}function Ne(){const p=Fi.getElapsedTime();H.material.uniforms.timer.value=p*.25+.5,nt.compute(),Vt.map.value=nt.getCurrentRenderTarget(H).texture,Oe(),zt.rotation.y=p*.01,Bi.uniforms.uTime.value=p,K.render(ft,W)}
